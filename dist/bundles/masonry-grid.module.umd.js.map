{"version":3,"file":"masonry-grid.module.umd.js","sources":["../src/masonry-grid.service.js","../src/masonry-grid.component.js","../src/masonry-grid.directive.js","../src/masonry-grid.module.js","../src/masonry-grid.interface.js"],"sourcesContent":["/**\r\n * Shailendra Kumar <shailu.snist@gmail.com>\r\n * @ignore\r\n */\r\nimport { Injectable, PLATFORM_ID, Inject } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nvar MasonryGridService = (function () {\r\n    function MasonryGridService(_platformId) {\r\n        this._platformId = _platformId;\r\n        this.isAnimate = false;\r\n        this.docElem = window.document.documentElement;\r\n        this.animationDefaults = {\r\n            animationEffect: 'effect-1',\r\n            // default animation effect-1\r\n            // Minimum and a maximum duration of the animation (random value is chosen)\r\n            minDuration: 0,\r\n            maxDuration: 0,\r\n            // The viewportFactor defines how much of the appearing item has to be visible in order to trigger the animation\r\n            // if we'd use a value of 0, this would mean that it would add the animation class as soon as the item is in the viewport.\r\n            // If we were to use the value of 1, the animation would only be triggered when we see all of the item in the viewport (100% of it)\r\n            viewportFactor: 0\r\n        };\r\n        this.masonryDefaults = {\r\n            itemSelector: '[masonry-grid-item], masonry-grid-item' // Set default itemSelector: mandatory\r\n        };\r\n    }\r\n    MasonryGridService.prototype.getViewportH = function () {\r\n        var client = this.docElem['clientHeight'], inner = window['innerHeight'];\r\n        if (client < inner)\r\n            return inner;\r\n        else\r\n            return client;\r\n    };\r\n    MasonryGridService.prototype.scrollY = function () {\r\n        return window.pageYOffset || this.docElem.scrollTop;\r\n    };\r\n    MasonryGridService.prototype.getOffset = function (el) {\r\n        var offsetTop = 0, offsetLeft = 0;\r\n        do {\r\n            if (!isNaN(el.offsetTop)) {\r\n                offsetTop += el.offsetTop;\r\n            }\r\n            if (!isNaN(el.offsetLeft)) {\r\n                offsetLeft += el.offsetLeft;\r\n            }\r\n        } while (el = el.offsetParent);\r\n        return {\r\n            top: offsetTop,\r\n            left: offsetLeft\r\n        };\r\n    };\r\n    MasonryGridService.prototype.inViewport = function (el, h) {\r\n        var elH = el.offsetHeight, scrolled = this.scrollY(), viewed = scrolled + this.getViewportH(), elTop = this.getOffset(el).top, elBottom = elTop + elH, \r\n        // if 0, the element is considered in the viewport as soon as it enters.\r\n        // if 1, the element is considered in the viewport only when it's fully inside\r\n        // value in percentage (1 >= h >= 0)\r\n        h = h || 0;\r\n        return (elTop + elH * h) <= viewed && (elBottom - elH * h) >= scrolled;\r\n    };\r\n    MasonryGridService.prototype.extend = function (a, b) {\r\n        for (var key in b) {\r\n            if (b.hasOwnProperty(key)) {\r\n                a[key] = b[key];\r\n            }\r\n        }\r\n        return a;\r\n    };\r\n    MasonryGridService.prototype.init = function (useAnimation, el, masonryOptions, animationOptions) {\r\n        this.useAnimation = useAnimation;\r\n        this.el = el;\r\n        this.isAnimate = animationOptions ? true : false;\r\n        this.masonryOptions = this.extend(this.masonryDefaults, masonryOptions);\r\n        this.animationOptions = this.extend(this.animationDefaults, animationOptions); // this.extend( this.animationDefaults, animationOptions );\r\n        return this._init();\r\n    };\r\n    // Initialize Masonry\r\n    // Initialize Masonry\r\n    MasonryGridService.prototype.initializeMasonry = \r\n    // Initialize Masonry\r\n    function (_element, options) {\r\n        var Masonry = require('masonry-layout');\r\n        return new Masonry(_element, options);\r\n    };\r\n    MasonryGridService.prototype._init = function () {\r\n        var _this = this;\r\n        // set margin bottom of gutter length.\r\n        if (this.masonryOptions.gutter) {\r\n            Array.prototype.slice.call(document.querySelectorAll(this.masonryDefaults.itemSelector)).forEach(function (element) {\r\n                element.style.marginBottom = _this.masonryOptions.gutter + 'px';\r\n            });\r\n        }\r\n        if (this.useAnimation || this.isAnimate) {\r\n            this.classie = require('desandro-classie');\r\n            // add animation effect\r\n            this.el.classList += \" \" + this.animationOptions.animationEffect;\r\n        }\r\n        if (isPlatformBrowser(this._platformId)) {\r\n            // initialize masonry\r\n            this._msnry = this.initializeMasonry(this.el, this.masonryOptions);\r\n            if (this.useAnimation || this.isAnimate && !this._msnry) {\r\n                this._msnry.on('layoutComplete', function (items) {\r\n                    _this.items = Array.prototype.slice.call(document.querySelectorAll(_this.masonryDefaults.itemSelector));\r\n                    _this.itemsCount = _this.items.length;\r\n                    _this.didScroll = false;\r\n                    _this.itemsRenderedCount = 0;\r\n                    // the items already shown...\r\n                    // the items already shown...\r\n                    _this.items.forEach(function (el, i) {\r\n                        if (_this.inViewport(el)) {\r\n                            _this._checkTotalRendered();\r\n                            _this.classie.add(el, 'shown');\r\n                            _this.classie.remove(el, 'animate');\r\n                            //setTimeout(() => {\r\n                            //}, 1000);\r\n                        }\r\n                    });\r\n                });\r\n                // animate on scroll the items inside the viewport\r\n                window.addEventListener('scroll', function () {\r\n                    _this._onScrollFn();\r\n                }, false);\r\n                window.addEventListener('resize', function () {\r\n                    _this._resizeHandler();\r\n                }, false);\r\n            }\r\n            return this._msnry;\r\n        }\r\n        return null;\r\n    };\r\n    MasonryGridService.prototype._onScrollFn = function () {\r\n        var self = this;\r\n        if (!this.didScroll) {\r\n            this.didScroll = true;\r\n            setTimeout(function () { self._scrollPage(); }, 60);\r\n        }\r\n    };\r\n    MasonryGridService.prototype._scrollPage = function () {\r\n        var _this = this;\r\n        var self = this;\r\n        this.items.forEach(function (el, i) {\r\n            if (!_this.classie.has(el, 'shown') && !_this.classie.has(el, 'animate') && _this.inViewport(el, self.animationOptions.viewportFactor)) {\r\n                setTimeout(function () {\r\n                    var perspY = _this.scrollY() + _this.getViewportH() / 2;\r\n                    self.el.style.WebkitPerspectiveOrigin = '50% ' + perspY + 'px';\r\n                    self.el.style.MozPerspectiveOrigin = '50% ' + perspY + 'px';\r\n                    self.el.style.perspectiveOrigin = '50% ' + perspY + 'px';\r\n                    self._checkTotalRendered();\r\n                    if (self.animationOptions.minDuration && self.animationOptions.maxDuration) {\r\n                        var randDuration = (Math.random() * (self.animationOptions.maxDuration - self.animationOptions.minDuration) + self.animationOptions.minDuration) + 's';\r\n                        el.style.WebkitAnimationDuration = randDuration;\r\n                        el.style.MozAnimationDuration = randDuration;\r\n                        el.style.animationDuration = randDuration;\r\n                    }\r\n                    _this.classie.add(el, 'animate');\r\n                }, 25);\r\n            }\r\n        });\r\n        this.didScroll = false;\r\n    };\r\n    MasonryGridService.prototype._resizeHandler = function () {\r\n        var self = this;\r\n        function delayed() {\r\n            self._scrollPage();\r\n            self.resizeTimeout = null;\r\n        }\r\n        if (this.resizeTimeout) {\r\n            clearTimeout(this.resizeTimeout);\r\n        }\r\n        this.resizeTimeout = setTimeout(delayed, 1000);\r\n    };\r\n    MasonryGridService.prototype._checkTotalRendered = function () {\r\n        var _this = this;\r\n        ++this.itemsRenderedCount;\r\n        if (this.itemsRenderedCount === this.itemsCount) {\r\n            window.removeEventListener('scroll', this._onScrollFn);\r\n            setTimeout(function () {\r\n                _this._msnry.layout();\r\n            });\r\n        }\r\n    };\r\n    MasonryGridService.decorators = [\r\n        { type: Injectable },\r\n    ];\r\n    /** @nocollapse */\r\n    MasonryGridService.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\r\n    ]; };\r\n    return MasonryGridService;\r\n}());\r\nexport { MasonryGridService };\r\n//# sourceMappingURL=masonry-grid.service.js.map","/**\r\n * Shailendra Kumar <shailu.snist@gmail.com>\r\n * @ignore\r\n */\r\nimport { Component, Input, Output, ElementRef, EventEmitter, PLATFORM_ID, Inject } from '@angular/core';\r\nimport { MasonryGridService } from './masonry-grid.service';\r\nvar MasonryGridComponent = (function () {\r\n    function MasonryGridComponent(_platformId, _element, masonryGridService) {\r\n        this._platformId = _platformId;\r\n        this._element = _element;\r\n        this.masonryGridService = masonryGridService;\r\n        // Inputs\r\n        this.masonryOptions = {};\r\n        this.useAnimation = false;\r\n        // Outputs\r\n        this.layoutComplete = new EventEmitter();\r\n        this.removeComplete = new EventEmitter();\r\n    }\r\n    MasonryGridComponent.prototype.ngOnInit = function () {\r\n    };\r\n    MasonryGridComponent.prototype.ngAfterViewInit = function () {\r\n        //initialize masonry after View Initialization\r\n        this.initializeMasonry();\r\n    };\r\n    MasonryGridComponent.prototype.ngOnDestroy = function () {\r\n        if (this._msnry) {\r\n            this._msnry.destroy();\r\n        }\r\n    };\r\n    MasonryGridComponent.prototype.layout = function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this._msnry.layout();\r\n        }, 50);\r\n    };\r\n    // remove item from masonry\r\n    // remove item from masonry\r\n    MasonryGridComponent.prototype.remove = \r\n    // remove item from masonry\r\n    function (element) {\r\n        this._msnry.remove(element);\r\n        this.layout();\r\n    };\r\n    MasonryGridComponent.prototype.initializeMasonry = function () {\r\n        var _this = this;\r\n        //initialize Masonry with Animation effects\r\n        this._msnry = this.masonryGridService.init(this.useAnimation, this._element.nativeElement, this.masonryOptions, this.scrollAnimationOptions);\r\n        // Bind to Masonry events\r\n        this._msnry.on('layoutComplete', function (items) {\r\n            _this.layoutComplete.emit(items);\r\n        });\r\n        this._msnry.on('removeComplete', function (items) {\r\n            _this.removeComplete.emit(items);\r\n        });\r\n        this.layout();\r\n    };\r\n    MasonryGridComponent.decorators = [\r\n        { type: Component, args: [{\r\n                    selector: '[masonry-grid], masonry-grid',\r\n                    template: '<ng-content></ng-content>',\r\n                    //styleUrls: ['./masonry-grid.css']\r\n                    styles: [\r\n                        \"\\n\\t\\t:host {\\n\\t\\t\\tdisplay: block;\\n\\t\\t}\\n\\t\"\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MasonryGridComponent.ctorParameters = function () { return [\r\n        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\r\n        { type: ElementRef, },\r\n        { type: MasonryGridService, },\r\n    ]; };\r\n    MasonryGridComponent.propDecorators = {\r\n        \"masonryOptions\": [{ type: Input },],\r\n        \"useAnimation\": [{ type: Input },],\r\n        \"scrollAnimationOptions\": [{ type: Input },],\r\n        \"layoutComplete\": [{ type: Output },],\r\n        \"removeComplete\": [{ type: Output },],\r\n    };\r\n    return MasonryGridComponent;\r\n}());\r\nexport { MasonryGridComponent };\r\n//# sourceMappingURL=masonry-grid.component.js.map","/**\r\n * Shailendra Kumar <shailu.snist@gmail.com>\r\n * @ignore\r\n */\r\nimport { Directive, Inject, ElementRef, forwardRef, PLATFORM_ID } from '@angular/core';\r\nimport { MasonryGridComponent } from './masonry-grid.component';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nvar MasonryGridDirective = (function () {\r\n    function MasonryGridDirective(_element, _parent, platformId) {\r\n        this._element = _element;\r\n        this._parent = _parent;\r\n        this.platformId = platformId;\r\n    }\r\n    MasonryGridDirective.prototype.ngAfterViewInit = function () {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.watchForHtmlChanges();\r\n        }\r\n    };\r\n    MasonryGridDirective.prototype.ngOnDestroy = function () {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this._parent.remove(this._element.nativeElement);\r\n        }\r\n    };\r\n    /** When HTML in brick changes dynamically, observe that and change layout */\r\n    /** When HTML in brick changes dynamically, observe that and change layout */\r\n    MasonryGridDirective.prototype.watchForHtmlChanges = /** When HTML in brick changes dynamically, observe that and change layout */\r\n    function () {\r\n        MutationObserver = window.MutationObserver || window.WebKitMutationObserver;\r\n        if (MutationObserver) {\r\n            /** Watch for any changes to subtree */\r\n            var self_1 = this;\r\n            var observer = new MutationObserver(function (mutations, observerFromElement) {\r\n                self_1._parent.layout();\r\n            });\r\n            // define what element should be observed by the observer\r\n            // and what types of mutations trigger the callback\r\n            observer.observe(this._element.nativeElement, {\r\n                subtree: true,\r\n                childList: true\r\n            });\r\n        }\r\n    };\r\n    MasonryGridDirective.decorators = [\r\n        { type: Directive, args: [{\r\n                    selector: '[masonry-grid-item], masonry-grid-item'\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MasonryGridDirective.ctorParameters = function () { return [\r\n        { type: ElementRef, },\r\n        { type: MasonryGridComponent, decorators: [{ type: Inject, args: [forwardRef(function () { return MasonryGridComponent; }),] },] },\r\n        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\r\n    ]; };\r\n    return MasonryGridDirective;\r\n}());\r\nexport { MasonryGridDirective };\r\n//# sourceMappingURL=masonry-grid.directive.js.map","/**\r\n * Shailendra Kumar <shailu.snist@gmail.com>\r\n * @ignore\r\n */\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MasonryGridComponent } from './masonry-grid.component';\r\nimport { MasonryGridDirective } from './masonry-grid.directive';\r\nimport { MasonryGridService } from './masonry-grid.service';\r\nvar MasonryGridModule = (function () {\r\n    function MasonryGridModule() {\r\n    }\r\n    MasonryGridModule.decorators = [\r\n        { type: NgModule, args: [{\r\n                    imports: [CommonModule],\r\n                    exports: [MasonryGridComponent, MasonryGridDirective],\r\n                    declarations: [MasonryGridComponent, MasonryGridDirective],\r\n                    providers: [MasonryGridService]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    MasonryGridModule.ctorParameters = function () { return []; };\r\n    return MasonryGridModule;\r\n}());\r\nexport { MasonryGridModule };\r\n//# sourceMappingURL=masonry-grid.module.js.map","var Masonry = (function () {\r\n    function Masonry(selector, options) {\r\n    }\r\n    ;\r\n    return Masonry;\r\n}());\r\nexport { Masonry };\r\n//# sourceMappingURL=masonry-grid.interface.js.map"],"names":["isPlatformBrowser","Injectable","Inject","PLATFORM_ID","EventEmitter","Component","ElementRef","Input","Output","Directive","forwardRef","NgModule","CommonModule"],"mappings":"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"}